

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://localhost:4000/</id>
  <title>imLZH1' Blog</title>
  <subtitle>A minimal, responsive and feature-rich Jekyll theme for technical writing.</subtitle>
  <updated>2024-01-26T22:31:00+08:00</updated>
  <author>
    <name>imLZH1</name>
    <uri>http://localhost:4000/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="http://localhost:4000/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="zh-CN"
    href="http://localhost:4000/"/>
  <generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator>
  <rights> © 2024 imLZH1 </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>2023年春秋杯网络安全联赛冬季赛pwn方向houseofsome-WriteUps</title>
    <link href="http://localhost:4000/posts/2023%E5%B9%B4%E6%98%A5%E7%A7%8B%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%81%94%E8%B5%9B%E5%86%AC%E5%AD%A3%E8%B5%9Bpwn%E6%96%B9%E5%90%91houseofsome-WriteUps/" rel="alternate" type="text/html" title="2023年春秋杯网络安全联赛冬季赛pwn方向houseofsome-WriteUps" />
    <published>2024-01-26T00:00:00+08:00</published>
  
    <updated>2024-01-26T00:00:00+08:00</updated>
  
    <id>http://localhost:4000/posts/2023%E5%B9%B4%E6%98%A5%E7%A7%8B%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%81%94%E8%B5%9B%E5%86%AC%E5%AD%A3%E8%B5%9Bpwn%E6%96%B9%E5%90%91houseofsome-WriteUps/</id>
    <content src="http://localhost:4000/posts/2023%E5%B9%B4%E6%98%A5%E7%A7%8B%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%81%94%E8%B5%9B%E5%86%AC%E5%AD%A3%E8%B5%9Bpwn%E6%96%B9%E5%90%91houseofsome-WriteUps/" />
    <author>
      <name>imLZH1</name>
    </author>

  
    
    <category term="CTF" />
    
  

  
    <summary>
      





      ‍


  2023年春秋杯网络安全联赛冬季赛 ​pwn 方向 HouseofSome​ , 题解


‍

​​

‍

程序保护和沙箱

​​

​​

‍

菜单功能 泄露libc上的地址


  ​scannf("%ldd",&amp;amp;xx)​ 传入 -​ 后面报错 会给出 libc上的地址​


​​

‍

draw功能 任意地址写一个NULL 字节


  通过上面泄露的_IO_2_1_stdin_​地址，我就基本上可以利用 draw​ 功能在 libc可写的地方写入一个NULL字节，写到哪里呢？？


‍


  写 到 main_arena + 1 (add 一个堆块 保证 top_chunk 的低地址是 0x00)
  需要爆破一点 保证 heap 地址起始是 heap_base &amp;amp; 0xFFFF == 0x0000​​ ,然后攻击 main_arena+...
    </summary>
  

  </entry>

  
  <entry>
    <title>第六届全国网络安全挑战赛青少年专项赛-实践赛-AWDP-Pwn-WriteUps_by_AhiSec</title>
    <link href="http://localhost:4000/posts/%E7%AC%AC%E5%85%AD%E5%B1%8A%E5%85%A8%E5%9B%BD%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%8C%91%E6%88%98%E8%B5%9B%E9%9D%92%E5%B0%91%E5%B9%B4%E4%B8%93%E9%A1%B9%E8%B5%9B-%E5%AE%9E%E8%B7%B5%E8%B5%9B-AWDP-Pwn-WriteUps_by_AhiSec/" rel="alternate" type="text/html" title="第六届全国网络安全挑战赛青少年专项赛-实践赛-AWDP-Pwn-WriteUps_by_AhiSec" />
    <published>2023-12-17T20:00:00+08:00</published>
  
    <updated>2023-12-17T20:00:00+08:00</updated>
  
    <id>http://localhost:4000/posts/%E7%AC%AC%E5%85%AD%E5%B1%8A%E5%85%A8%E5%9B%BD%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%8C%91%E6%88%98%E8%B5%9B%E9%9D%92%E5%B0%91%E5%B9%B4%E4%B8%93%E9%A1%B9%E8%B5%9B-%E5%AE%9E%E8%B7%B5%E8%B5%9B-AWDP-Pwn-WriteUps_by_AhiSec/</id>
    <content src="http://localhost:4000/posts/%E7%AC%AC%E5%85%AD%E5%B1%8A%E5%85%A8%E5%9B%BD%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%8C%91%E6%88%98%E8%B5%9B%E9%9D%92%E5%B0%91%E5%B9%B4%E4%B8%93%E9%A1%B9%E8%B5%9B-%E5%AE%9E%E8%B7%B5%E8%B5%9B-AWDP-Pwn-WriteUps_by_AhiSec/" />
    <author>
      <name>imLZH1</name>
    </author>

  
    
    <category term="CTF" />
    
  

  
    <summary>
      





      ‍‍
2023-12-17-第六届全国网络安全挑战赛青少年专项赛-实践赛-AWDP-Pwn-WriteUps_by_AhiSec

‍

‍

pwn-easygo

‍

程序分析

‍


  
    存在一个后门
  
  
    输入溢出覆盖栈上数据
  
  
    没什么好玩的
  


‍

Break

‍


  溢出直接覆盖就行了，


‍

from pwn import *
s       = lambda data               :io.send(data)
sa      = lambda delim,data         :io.sendafter(str(delim), data)
sl      = lambda data               :io.sendline(data)
sla     = lambda de...
    </summary>
  

  </entry>

  
  <entry>
    <title>2023DASCTF X 0psu3十一月挑战赛｜越艰巨·越狂热-pwn-Writeups</title>
    <link href="http://localhost:4000/posts/DASCTF-X-0psu3%E5%8D%81%E4%B8%80%E6%9C%88%E6%8C%91%E6%88%98%E8%B5%9B-%E8%B6%8A%E8%89%B0%E5%B7%A8-%E8%B6%8A%E7%8B%82%E7%83%AD-pwn-Writeups/" rel="alternate" type="text/html" title="2023DASCTF X 0psu3十一月挑战赛｜越艰巨·越狂热-pwn-Writeups" />
    <published>2023-11-25T20:00:00+08:00</published>
  
    <updated>2023-11-25T20:00:00+08:00</updated>
  
    <id>http://localhost:4000/posts/DASCTF-X-0psu3%E5%8D%81%E4%B8%80%E6%9C%88%E6%8C%91%E6%88%98%E8%B5%9B-%E8%B6%8A%E8%89%B0%E5%B7%A8-%E8%B6%8A%E7%8B%82%E7%83%AD-pwn-Writeups/</id>
    <content src="http://localhost:4000/posts/DASCTF-X-0psu3%E5%8D%81%E4%B8%80%E6%9C%88%E6%8C%91%E6%88%98%E8%B5%9B-%E8%B6%8A%E8%89%B0%E5%B7%A8-%E8%B6%8A%E7%8B%82%E7%83%AD-pwn-Writeups/" />
    <author>
      <name>imLZH1</name>
    </author>

  
    
    <category term="CTF" />
    
  

  
    <summary>
      





      ‍

‍
DASCTF X CBCTF 2023｜无畏者先行

‍

‍

Pwn-ASadStory

‍


  保护


​​


  沙箱


​​

‍


  exploit


from pwn import *
s       = lambda data               :io.send(data)
sa      = lambda delim,data         :io.sendafter(str(delim), data)
sl      = lambda data               :io.sendline(data)
sla     = lambda delim,data         :io.sendlineafter(str(delim), data)
r       = lambda num                :...
    </summary>
  

  </entry>

  
  <entry>
    <title>2023香山杯决赛Pwn-分析</title>
    <link href="http://localhost:4000/posts/2023%E9%A6%99%E5%B1%B1%E6%9D%AF%E5%86%B3%E8%B5%9BPwn-%E5%88%86%E6%9E%90/" rel="alternate" type="text/html" title="2023香山杯决赛Pwn-分析" />
    <published>2023-11-20T20:00:00+08:00</published>
  
    <updated>2023-11-20T20:00:00+08:00</updated>
  
    <id>http://localhost:4000/posts/2023%E9%A6%99%E5%B1%B1%E6%9D%AF%E5%86%B3%E8%B5%9BPwn-%E5%88%86%E6%9E%90/</id>
    <content src="http://localhost:4000/posts/2023%E9%A6%99%E5%B1%B1%E6%9D%AF%E5%86%B3%E8%B5%9BPwn-%E5%88%86%E6%9E%90/" />
    <author>
      <name>imLZH1</name>
    </author>

  
    
    <category term="CTF" />
    
  

  
    <summary>
      





      
  进决赛了，但是和金砖的比赛冲突了决赛没时间去了呜呜呜😭😭😭，选择去打金砖了，好打一点。


camera

‍

程序分析

‍

​​

‍

根据程序的功能然后加上一些手法，可以double free

后面就是填满 tcachebins 然后 fastbin double free 就好了

‍

​​

‍

‍

cat 用的顺手了，我就直接用 cat  ORW 就好了

​​

‍

Break

‍

from pwn import *
s       = lambda data               :io.send(data)
sa      = lambda delim,data         :io.sendafter(str(delim), data)
sl      = lambda data               :io.sendlin...
    </summary>
  

  </entry>

  
  <entry>
    <title>2023一带一路暨金砖国家技能发展与技术创新大赛之网络安全在企业信息管理中的应用-Pwn-WriteUps</title>
    <link href="http://localhost:4000/posts/2023%E4%B8%80%E5%B8%A6%E4%B8%80%E8%B7%AF%E6%9A%A8%E9%87%91%E7%A0%96%E5%9B%BD%E5%AE%B6%E6%8A%80%E8%83%BD%E5%8F%91%E5%B1%95%E4%B8%8E%E6%8A%80%E6%9C%AF%E5%88%9B%E6%96%B0%E5%A4%A7%E8%B5%9B%E4%B9%8B%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%9C%A8%E4%BC%81%E4%B8%9A%E4%BF%A1%E6%81%AF%E7%AE%A1%E7%90%86%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8-Pwn-WriteUps/" rel="alternate" type="text/html" title="2023一带一路暨金砖国家技能发展与技术创新大赛之网络安全在企业信息管理中的应用-Pwn-WriteUps" />
    <published>2023-11-19T20:00:00+08:00</published>
  
    <updated>2023-11-19T20:00:00+08:00</updated>
  
    <id>http://localhost:4000/posts/2023%E4%B8%80%E5%B8%A6%E4%B8%80%E8%B7%AF%E6%9A%A8%E9%87%91%E7%A0%96%E5%9B%BD%E5%AE%B6%E6%8A%80%E8%83%BD%E5%8F%91%E5%B1%95%E4%B8%8E%E6%8A%80%E6%9C%AF%E5%88%9B%E6%96%B0%E5%A4%A7%E8%B5%9B%E4%B9%8B%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%9C%A8%E4%BC%81%E4%B8%9A%E4%BF%A1%E6%81%AF%E7%AE%A1%E7%90%86%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8-Pwn-WriteUps/</id>
    <content src="http://localhost:4000/posts/2023%E4%B8%80%E5%B8%A6%E4%B8%80%E8%B7%AF%E6%9A%A8%E9%87%91%E7%A0%96%E5%9B%BD%E5%AE%B6%E6%8A%80%E8%83%BD%E5%8F%91%E5%B1%95%E4%B8%8E%E6%8A%80%E6%9C%AF%E5%88%9B%E6%96%B0%E5%A4%A7%E8%B5%9B%E4%B9%8B%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%9C%A8%E4%BC%81%E4%B8%9A%E4%BF%A1%E6%81%AF%E7%AE%A1%E7%90%86%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8-Pwn-WriteUps/" />
    <author>
      <name>imLZH1</name>
    </author>

  
    
    <category term="CTF" />
    
  

  
    <summary>
      





      ‍
‍

‍

pwn-pwn0402

‍

​​​​

‍


  我们采用溢出后再次read  然后写shellcode 在栈上ret


‍

​​

‍

​​

from pwn import *
s       = lambda data               :io.send(data)
sa      = lambda delim,data         :io.sendafter(str(delim), data)
sl      = lambda data               :io.sendline(data)
sla     = lambda delim,data         :io.sendlineafter(str(delim), data)
r       = lambda num                :io.recv(n...
    </summary>
  

  </entry>

</feed>


